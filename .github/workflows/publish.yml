name: Version and Publish

on:
  push:
    branches:
      - master
      - develop
    paths-ignore:
      - 'VERSION'
  pull_request:
    types: [closed]
    branches:
      - master
      - develop

jobs:
  version:
    if: github.event.pull_request.merged == true || github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Version
        run: |
          # Read current version
          version=$(cat VERSION)
          IFS='.' read -r major minor patch <<< "$version"
          
          # Merge from develop to master
          if [[ "${{ github.event.pull_request.merged }}" == "true" && "${{ github.base_ref }}" == "master" && "${{ github.head_ref }}" == "develop" ]]; then
            major=$((major + 1))
            minor=0
            patch=0
          # All other changes to master/develop
          elif [[ "${{ github.ref }}" == "refs/heads/master" || "${{ github.ref }}" == "refs/heads/develop" || ("${{ github.event.pull_request.merged }}" == "true" && ("${{ github.base_ref }}" == "master" || "${{ github.base_ref }}" == "develop")) ]]; then
            if [[ "${{ contains(github.event.pull_request.labels.*.name, 'feature') }}" == "true" ]]; then
              minor=$((minor + 1))
              patch=0
            else
              patch=$((patch + 1))
            fi
          fi
          
          echo "${major}.${minor}.${patch}" > VERSION
          
          # Update CMakeLists.txt version
          sed -i "s/set(MAGDRAG_VERSION_MAJOR [0-9]*)/set(MAGDRAG_VERSION_MAJOR ${major})/g" CMakeLists.txt
          sed -i "s/set(MAGDRAG_VERSION_MINOR [0-9]*)/set(MAGDRAG_VERSION_MINOR ${minor})/g" CMakeLists.txt
          sed -i "s/set(MAGDRAG_VERSION_PATCH [0-9]*)/set(MAGDRAG_VERSION_PATCH ${patch})/g" CMakeLists.txt

      - name: Commit and Push Version Update
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add VERSION CMakeLists.txt
          git commit -m "Bump version to $(cat VERSION)"
          
          if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            git tag "v$(cat VERSION)"
            git push --tags
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            git tag "v$(cat VERSION)-dev"
            git push --tags
          fi
          
          git push

      - name: Build Package
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'
        run: |
          mkdir -p build
          cd build
          cmake ..
          make
          cd ..
          mkdir -p package/lib
          cp build/lib/MagDragClangTidyNamingCheck.so package/lib/
          cp -r include package/
          
          if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            tar czf magdrag-checks.tar.gz package/
          else
            tar czf magdrag-checks-dev.tar.gz package/
          fi

      - name: Create GitHub Release
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref == 'refs/heads/master' && format('v{0}', env.VERSION) || format('v{0}-dev', env.VERSION) }}
          files: ${{ github.ref == 'refs/heads/master' && 'magdrag-checks.tar.gz' || 'magdrag-checks-dev.tar.gz' }}
          prerelease: ${{ github.ref != 'refs/heads/master' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.version.outputs.version }}